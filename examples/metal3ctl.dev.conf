---
managementClusterName: minikube
kubeconfig: /home/awander/.kube/config
artifactsPath: /tmp/_artifacts/

# Use local dev images built source tree
# TODO: We don't do anything with these images at the moment. We should prefetch these images in minikube as part of init.
images:
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller-amd64:dev
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller-amd64:dev
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller-amd64:dev
- name: quay.io/metal3-io/cluster-api-provider-metal3:master
- name: quay.io/metal3-io/baremetal-operator:latest

bmoProvider:

  name: baremetal-operator
  type: BareMetalOperator
  versions:
  # only a single bmo version can be specified currently
  - name: v0.1.0
    value: /home/awander/go/src/github.com/metal3-io/baremetal-operator/deploy/ironic-keepalived-config
    type: kustomize
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
  waiters:
  # TODO  
  files:
  # TODO

capiProviders:

- name: cluster-api
  type: CoreProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: /home/awander/go/src/sigs.k8s.io/cluster-api/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  # Wait for controller
  - type: deployment
    defaultNamespace: capi-system
    name: capi-controller-manager
  # Wait for webhook server
  - type: deployment
    namespace: capi-webhook-system
    name: capi-controller-manager

- name: kubeadm
  type: BootstrapProvider
  versions:
  - name: v0.3.0
    value: /home/awander/go/src/sigs.k8s.io/cluster-api/bootstrap/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - type: deployment
    defaultNamespace: capi-kubeadm-bootstrap-system
    name: capi-kubeadm-bootstrap-controller-manager
  - type: deployment
    namespace: capi-webhook-system
    name: capi-kubeadm-bootstrap-controller-manager

- name: kubeadm
  type: ControlPlaneProvider
  versions:
  - name: v0.3.0
    value: /home/awander/go/src/sigs.k8s.io/cluster-api/controlplane/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - type: deployment
    defaultNamespace: capi-kubeadm-control-plane-system
    name: capi-kubeadm-control-plane-controller-manager
  - type: deployment
    namespace: capi-webhook-system
    name: capi-kubeadm-control-plane-controller-manager

- name: metal3
  type: InfrastructureProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: /home/awander/go/src/github.com/metal3-io/cluster-api-provider-metal3/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  waiters:
  - type: deployment
    defaultNamespace: capbm-system
    name: capbm-controller-manager
  files:
  # Add a cluster template
  # - sourcePath: "../../../sigs.k8s.io/cluster-api/cmd/clusterctl/test/testdata/docker/v0.3.0/cluster-template.yaml"

variables:
  CAPBM_FOO: "foo.var"