apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: test1-md-0
  namespace: metal3
  labels:
    cluster.x-k8s.io/cluster-name: test1
    nodepool: nodepool-0
spec:
  clusterName: test1
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: test1
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: test1
        nodepool: nodepool-0
    spec:
      clusterName: test1
      version: v1.17.0
      bootstrap:
        configRef:
          name: test1-md-0
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: test1-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: Metal3MachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: Metal3MachineTemplate
metadata:
  name: test1-md-0
  namespace: metal3
spec:
  template:
    spec:
      image:
        url: http://172.22.0.1/images/bionic-server-cloudimg-amd64.img
        checksum: http://172.22.0.1/images/bionic-server-cloudimg-amd64.img.md5sum
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: test1-md-0
  namespace: metal3
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.name }}' 
          kubeletExtraArgs:
            node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
            provider-id: 'metal3://{{ ds.meta_data.uuid }}'
      preKubeadmCommands:
        - ip link set dev enp2s0 up
        - dhclient enp2s0
        - mv /tmp/akeys /home/ubuntu/.ssh/authorized_keys
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/authorized_keys
        - apt update -y
        - netplan apply
        - >-
          apt install apt-transport-https ca-certificates
          curl gnupg-agent software-properties-common -y
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        - echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list
        - apt update -y
        - apt install docker-ce docker-ce-cli containerd.io kubelet=1.17.0-00 kubeadm=1.17.0-00 kubectl=1.17.0-00 -y
        - systemctl enable --now docker kubelet
        - usermod -aG docker ubuntu
      files:
        - path: /etc/netplan/50-cloud-init.yaml
          owner: root:root
          permissions: '0644'
          content: |
            network:
                ethernets:
                    enp1s0:
                        dhcp4: true
                    enp2s0:
                        dhcp4: true
                version: 2
        - path: /tmp/akeys
          owner: root:root
          permissions: '0644'
          content: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDupXbhT6iHoCPyN9ubtp32pQDI+YmwJdCLu8v5H5vFoDc4xLcTlMFiSSJg8S9bfPSVjMC/Un6mk9QkbmZ2usxeSTS1o/4d3bZdn5iI3dZljV50EBIL1xO5/g0Due8O2jkjx4AZX3/ifWq263pddltTq4ZSJ+l7iuJlhPsD6yWk1dg4jGIr84K61Zv9dhJ8yhW5CuHnw7uH0N5CeJ7QPDXBZU00zIyO0cIrxeNeRCK9fV0KDtg/JtJru3G2Xqm6LsZm6K+2vh0FllPBLULEtj3yN7xuHd4+TEhgc2MS1EDIe4fYcTH9VtdSxIsNbHWqPPHmfELHaZce25COL+6RtrAB awander@awander-tp
